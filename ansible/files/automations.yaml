- id: '1722085260749'
  alias: automation-tv
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - media_player.philips_43pus8506_2
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 5
    id: chromecast-off
  - trigger: state
    entity_id:
    - media_player.philips_43pus8506
    to: idle
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: tv-off
  - entity_id:
    - media_player.philips_43pus8506_2
    attribute: app_id
    to: com.google.android.tvlauncher
    for:
      hours: 0
      minutes: 15
      seconds: 0
    trigger: state
    id: tv-off
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - chromecast-off
    - condition: template
      value_template: '{{ state_attr(''remote.philips_43pus8506'', ''current_activity'')
        != ''com.google.android.tvlauncher'' }}'
    then:
    - action: media_player.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: media_player.philips_43pus8506
  - if:
    - condition: trigger
      id:
      - tv-off
    - condition: state
      entity_id: remote.philips_43pus8506
      state: 'on'
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: remote.philips_43pus8506
      action: remote.turn_off
  mode: single
- id: '1733714968098'
  alias: automation-phone
  description: ''
  triggers:
  - trigger: time
    at: 00:00:00
    id: low
  - trigger: time
    at: input_datetime.datetime_wakeup_time
    id: high
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - low
    then:
    - action: notify.notify
      metadata: {}
      data:
        message: command_screen_brightness_level
        data:
          command: 8
  - if:
    - condition: trigger
      id:
      - high
    - condition: state
      entity_id: input_boolean.boolean_wakeup_lights
      state: 'off'
    then:
    - action: notify.notify
      metadata: {}
      data:
        message: command_screen_brightness_level
        data:
          command: 30
  mode: single
- id: '1741004005554'
  alias: automation-lights-time
  description: ''
  triggers:
  - trigger: template
    value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
      | timestamp_custom(''%H'') | int %}

      {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
      | int %}

      {% set ratio = 7/10 %}

      {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') == (((24-hours-min/60)*ratio+hours+min/60)*60*60)
      | timestamp_custom(''%H:%M'', false) }}'
  conditions: []
  actions:
  - if:
    - condition: state
      entity_id: light.lights_livingroom
      attribute: color_mode
      state: color_temp
    - condition: not
      conditions:
      - condition: state
        entity_id: input_text.text_livingroom_lights_state
        state: Color
    then:
    - action: script.turn_on
      metadata: {}
      data:
        variables:
          transition: 180
      target:
        entity_id: script.script_livingroom_lights_color
  - if:
    - condition: state
      entity_id: light.lights_bedroom
      attribute: color_mode
      state: color_temp
    - condition: not
      conditions:
      - condition: state
        entity_id: input_text.text_bedroom_lights_state
        state: Color
    then:
    - action: script.turn_on
      metadata: {}
      data:
        variables:
          transition: 180
      target:
        entity_id: script.script_bedroom_lights_color
  mode: single
- id: '1741088261703'
  alias: automation-lights-morning
  description: ''
  triggers:
  - at: input_datetime.datetime_wakeup_time
    trigger: time
  conditions:
  - condition: state
    entity_id: binary_sensor.sun_solar_rising
    state: 'on'
  actions:
  - if:
    - condition: state
      entity_id: binary_sensor.sensor_bedroom_motion
      state: 'on'
    - condition: state
      entity_id: input_boolean.boolean_wakeup_lights
      state: 'off'
    then:
    - action: script.turn_on
      metadata: {}
      data:
        variables:
          transition: 1200
      target:
        entity_id: script.script_bedroom_lights_full
    - metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.boolean_wakeup_lights
      action: input_boolean.turn_on
  mode: single
- id: '1741088287959'
  alias: automation-lights-remote
  description: ''
  triggers:
  - device_id: 7e0df21fba2ff631d282063e7bc97f81
    domain: zha
    type: remote_button_short_press
    subtype: turn_on
    trigger: device
    id: turn-on-bed
  - device_id: 7e0df21fba2ff631d282063e7bc97f81
    domain: zha
    type: remote_button_short_press
    subtype: turn_off
    trigger: device
    id: turn-off-bed
  - device_id: 7e0df21fba2ff631d282063e7bc97f81
    domain: zha
    type: remote_button_short_press
    subtype: right
    trigger: device
    id: turn-on-living
  - device_id: 7e0df21fba2ff631d282063e7bc97f81
    domain: zha
    type: remote_button_short_press
    subtype: left
    trigger: device
    id: turn-off-living
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on-bed
    - condition: state
      entity_id: light.lights_bedroom
      state: 'off'
    then:
    - action: script.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: script.script_bedroom_lights_color
  - if:
    - condition: trigger
      id:
      - turn-off-bed
    - condition: state
      entity_id: light.lights_bedroom
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - light.lights_bedroom
  - if:
    - condition: trigger
      id:
      - turn-on-living
    - condition: state
      entity_id: light.lights_livingroom
      state: 'off'
    then:
    - action: script.turn_on
      metadata: {}
      data: {}
      target:
        entity_id:
        - script.script_livingroom_lights_color
  - if:
    - condition: trigger
      id:
      - turn-off-living
    - condition: state
      entity_id: light.lights_livingroom
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - light.lights_livingroom
  mode: single
- id: '1741088398150'
  alias: automation-lights-morning-wakeup-time
  description: ''
  triggers:
  - entity_id:
    - sensor.pixel_8_next_alarm
    - input_datetime.datetime_alarm_time
    trigger: state
  - trigger: time
    at: 00:00:00
    enabled: false
  conditions: []
  actions:
  - if:
    - condition: template
      value_template: '{{ states(''sensor.pixel_8_next_alarm'') in ["unknown","unavailable"]
        }}'
    then:
    - metadata: {}
      data:
        timestamp: '{{ as_timestamp(today_at(states(''input_datetime.datetime_alarm_time'')))
          | int - 10*60 }}'
      target:
        entity_id: input_datetime.datetime_wakeup_time
      action: input_datetime.set_datetime
      enabled: false
    - metadata: {}
      data:
        datetime: '{{ today_at(states(''input_datetime.datetime_alarm_time'')) - timedelta(minutes=15)
          }}'
      target:
        entity_id:
        - input_datetime.datetime_wakeup_time
      action: input_datetime.set_datetime
    else:
    - metadata: {}
      data:
        timestamp: '{{ as_timestamp(states(''sensor.pixel_8_next_alarm'')) | int -
          10*60 }}'
      target:
        entity_id: input_datetime.datetime_wakeup_time
      action: input_datetime.set_datetime
      enabled: false
    - metadata: {}
      data:
        datetime: '{{ as_local(as_datetime(states(''sensor.pixel_8_next_alarm''))
          - timedelta(minutes=15)) }}'
      target:
        entity_id:
        - input_datetime.datetime_wakeup_time
      action: input_datetime.set_datetime
  mode: single
- id: '1741088451864'
  alias: automation-lights-morning-wakeup-boolean
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.sun_solar_rising
    to: 'on'
  conditions:
  - condition: state
    entity_id: input_boolean.boolean_wakeup_lights
    state: 'on'
  actions:
  - action: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.boolean_wakeup_lights
  mode: single
- id: '1744135981096'
  alias: automation-lights-livingroom
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.sensor_livingroom_motion
    to: 'on'
    id: turn-on-motion
    from: 'off'
  - trigger: state
    entity_id:
    - binary_sensor.sensor_livingroom_motion
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: turn-off
    from: 'on'
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_livingroom_beam_illuminance
    for:
      hours: 0
      minutes: 0
      seconds: 40
    above: 0
    id: turn-off
    value_template: '{{ state.state|float - states(''input_number.number_illumination_livingroom_dim'')|float
      - states(''input_number.number_illumination_offset'')|int }}'
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_livingroom_beam_illuminance
    below: input_number.number_illumination_livingroom_dim
    id: turn-on-illum
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_livingroom_beam_illuminance
    id: turn-on-illum
    above: 0
    for:
      hours: 0
      minutes: 0
      seconds: 40
    value_template: '{{ state.state|float - states(''input_number.number_illumination_livingroom_dark'')|float
      - states(''input_number.number_illumination_offset'')|int }}'
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_livingroom_beam_illuminance
    below: input_number.number_illumination_livingroom_dark
    id: turn-on-illum
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on-motion
      - turn-on-illum
    - condition: numeric_state
      entity_id: sensor.sensor_livingroom_beam_illuminance
      below: input_number.number_illumination_livingroom_dim
    - condition: state
      entity_id: binary_sensor.sensor_livingroom_motion
      state: 'on'
    then:
    - choose:
      - conditions:
        - condition: or
          conditions:
          - condition: and
            conditions:
            - condition: time
              before: input_datetime.datetime_wakeup_time
            - condition: state
              entity_id: input_boolean.boolean_wakeup_lights
              state: 'off'
          - condition: template
            value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
              | timestamp_custom(''%H'') | int %}

              {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
              | int %}

              {% set ratio = 7/10 %}

              {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') >= (((24-hours-min/60)*ratio+hours+min/60)*60*60)
              | timestamp_custom(''%H:%M'', false) }}'
        sequence:
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: input_text.text_livingroom_lights_state
              state: Color
          then:
          - action: script.turn_on
            metadata: {}
            data:
              variables:
                transition: '{{ 1 if trigger.id == ''turn-on-motion'' else 180 }}'
            target:
              entity_id:
              - script.script_livingroom_lights_color
      - conditions:
        - condition: numeric_state
          entity_id: sensor.sensor_livingroom_beam_illuminance
          above: 0
          value_template: '{{ state.state|float - states(''input_number.number_illumination_livingroom_dark'')|float
            }}'
        sequence:
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: input_text.text_livingroom_lights_state
              state: Partial
          then:
          - action: script.turn_on
            metadata: {}
            data:
              variables:
                transition: '{{ 1 if trigger.id == ''turn-on-motion'' else 60 }}'
            target:
              entity_id: script.script_livingroom_lights_partial
      default:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: input_text.text_livingroom_lights_state
            state: Full
        then:
        - action: script.turn_on
          metadata: {}
          data:
            variables:
              transition: '{{ 1 if trigger.id == ''turn-on-motion'' else 60 }}'
          target:
            entity_id: script.script_livingroom_lights_full
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: light.lights_livingroom
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data:
        transition: 15
      target:
        entity_id:
        - light.lights_livingroom
  mode: single
- id: '1746198320343'
  alias: automation-lights-bedroom
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.sensor_bedroom_motion
    to: 'on'
    id: turn-on-motion
    from: 'off'
  - trigger: state
    entity_id:
    - binary_sensor.sensor_bedroom_motion
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
    id: turn-off
    from: 'on'
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_bedroom_beam_illuminance
    for:
      hours: 0
      minutes: 0
      seconds: 40
    above: 0
    id: turn-off
    value_template: '{{ state.state|float - states(''input_number.number_illumination_bedroom_dim'')|float
      - states(''input_number.number_illumination_offset'')|int }}'
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_bedroom_beam_illuminance
    below: input_number.number_illumination_bedroom_dim
    id: turn-on-illum
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_bedroom_beam_illuminance
    for:
      hours: 0
      minutes: 0
      seconds: 40
    above: 0
    id: turn-on-illum
    value_template: '{{ state.state|float - states(''input_number.number_illumination_bedroom_dark'')|float
      - states(''input_number.number_illumination_offset'')|int }}'
  - trigger: numeric_state
    entity_id:
    - sensor.sensor_bedroom_beam_illuminance
    below: input_number.number_illumination_bedroom_dark
    id: turn-on-illum
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on-motion
      - turn-on-illum
    - condition: numeric_state
      entity_id: sensor.sensor_bedroom_beam_illuminance
      below: input_number.number_illumination_bedroom_dim
    - condition: state
      entity_id: binary_sensor.sensor_bedroom_motion
      state: 'on'
    then:
    - choose:
      - conditions:
        - condition: time
          before: input_datetime.datetime_wakeup_time
        - condition: state
          entity_id: input_boolean.boolean_wakeup_lights
          state: 'off'
        sequence: []
      - conditions:
        - condition: template
          value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
            | timestamp_custom(''%H'') | int %}

            {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
            | int %}

            {% set ratio = 7/10 %}

            {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') >= (((24-hours-min/60)*ratio+hours+min/60)*60*60)
            | timestamp_custom(''%H:%M'', false) }}'
        sequence:
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: input_text.text_bedroom_lights_state
              state: Color
          then:
          - action: script.turn_on
            metadata: {}
            data:
              variables:
                transition: '{{ 1 if trigger.id == ''turn-on-motion'' else 180 }}'
            target:
              entity_id:
              - script.script_bedroom_lights_color
      - conditions:
        - condition: numeric_state
          entity_id: sensor.sensor_bedroom_beam_illuminance
          value_template: '{{ state.state|float - states(''input_number.number_illumination_bedroom_dark'')|float
            }}'
          above: 0
        sequence:
        - if:
          - condition: not
            conditions:
            - condition: state
              entity_id: input_text.text_bedroom_lights_state
              state: Partial
          then:
          - action: script.turn_on
            metadata: {}
            data:
              variables:
                transition: '{{ 1 if trigger.id == ''turn-on-motion'' else 60 }}'
            target:
              entity_id:
              - script.script_bedroom_lights_partial
      default:
      - if:
        - condition: not
          conditions:
          - condition: state
            entity_id: input_text.text_bedroom_lights_state
            state: Full
        then:
        - action: script.turn_on
          metadata: {}
          data:
            variables:
              transition: '{{ 1 if trigger.id == ''turn-on-motion'' else 60 }}'
          target:
            entity_id:
            - script.script_bedroom_lights_full
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: light.lights_bedroom
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data:
        transition: 15
      target:
        entity_id: light.lights_bedroom
  mode: single
- id: '1746824071284'
  alias: automation-lights-off
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.lights_livingroom
    id: living
    to: 'off'
    from: 'on'
  - trigger: state
    entity_id:
    - light.lights_bedroom
    id: bed
    to: 'off'
    from: 'on'
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - living
    then:
    - action: input_text.set_value
      metadata: {}
      data:
        value: 'Off'
      target:
        entity_id: input_text.text_livingroom_lights_state
  - if:
    - condition: trigger
      id:
      - bed
    then:
    - action: input_text.set_value
      metadata: {}
      data:
        value: 'Off'
      target:
        entity_id: input_text.text_bedroom_lights_state
  mode: single
- id: '1752581189072'
  alias: automation-test
  description: ''
  triggers: []
  conditions: []
  actions:
  - data:
      message: command_activity
      data:
        intent_package_name: com.google.android.deskclock
        intent_extras: android.intent.extra.alarm.HOUR:8,android.intent.extra.alarm.MINUTES:30
        intent_action: android.intent.action.SET_ALARM
    action: notify.mobile_app_pixel_8
  mode: single
