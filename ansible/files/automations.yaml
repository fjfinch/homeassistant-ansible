- id: '1708472646046'
  alias: automation-motion-kitchen
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.sensor_kitchen_occupancy_2
    to: 'on'
    id: motion
    trigger: state
  - entity_id:
    - binary_sensor.sensor_kitchen_occupancy_2
    to: 'off'
    id: no-motion
    for:
      hours: 0
      minutes: 2
      seconds: 0
    trigger: state
  - entity_id:
    - light.light_kitchen_light
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: no-motion
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - motion
    - condition: state
      state: 'off'
      entity_id: light.light_kitchen_light
    then:
    - metadata: {}
      data:
        brightness_pct: 80
      target:
        entity_id: light.light_kitchen_light
      action: light.turn_on
  - if:
    - condition: trigger
      id:
      - no-motion
    - condition: state
      entity_id: binary_sensor.sensor_kitchen_occupancy_2
      state: 'off'
    - condition: state
      state: 'on'
      entity_id: light.light_kitchen_light
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: light.light_kitchen_light
      action: light.turn_off
  mode: single
- id: '1715010154294'
  alias: automation-evening
  description: ''
  triggers:
  - entity_id:
    - sensor.sensor_outside_illuminance
    for:
      hours: 0
      minutes: 0
      seconds: 0
    below: 3000
    id: turn-on-full
    trigger: numeric_state
  - entity_id:
    - sensor.sensor_outside_illuminance
    for:
      hours: 0
      minutes: 5
      seconds: 0
    id: turn-off
    above: 3200
    trigger: numeric_state
  - trigger: template
    value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
      | timestamp_custom(''%H'') | int %}

      {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
      | int %}

      {% set ratio = 1/9 %}

      {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') == (((24-hours-min/60)*ratio+hours+min/60)*60*60)
      | timestamp_custom(''%H:%M'', false) }}'
    id: turn-on-evening
  - trigger: template
    value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
      | timestamp_custom(''%H'') | int %}

      {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
      | int %}

      {% set ratio = 2/3 %}

      {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') == (((24-hours-min/60)*ratio+hours+min/60)*60*60)
      | timestamp_custom(''%H:%M'', false) }}'
    id: turn-on-night
  - at: 02:00:00
    id: turn-off
    trigger: time
  conditions:
  - condition: state
    entity_id: sensor.sun_solar_rising
    state: 'False'
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on-full
    - condition: state
      entity_id: binary_sensor.sensor_inside_motion
      state: 'on'
    then:
    - action: script.script_lights_bypass
      metadata: {}
      data:
        transition: 120
        script: script.script_lights_full
  - if:
    - condition: trigger
      id:
      - turn-on-evening
    - condition: state
      entity_id: light.lights_all
      state: 'on'
    then:
    - action: script.script_lights_bypass
      metadata: {}
      data:
        transition: 300
        script: script.script_lights_evening
  - if:
    - condition: trigger
      id:
      - turn-on-night
    - condition: state
      entity_id: light.lights_all
      state: 'on'
    then:
    - action: script.script_lights_bypass
      metadata: {}
      data:
        transition: 300
        script: script.script_lights_night
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: light.lights_all
      state: 'on'
    then:
    - metadata: {}
      data:
        transition: 30
      target:
        entity_id: light.lights_all
      action: light.turn_off
  mode: single
- id: '1716369171251'
  alias: automation-morning
  description: ''
  triggers:
  - at: 09:00:00
    id: turn-on-time
    trigger: time
  - at: input_datetime.time_wakeup_lights
    id: turn-on-alarm
    trigger: time
  - entity_id:
    - sensor.sensor_working_area_illuminance
    id: turn-off
    above: 45
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: sensor.sun_solar_rising
    state: 'True'
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on-time
      - turn-on-alarm
    - condition: state
      entity_id: binary_sensor.sensor_inside_motion
      state: 'on'
    - condition: template
      value_template: '{{ (trigger.id in [''turn-on-alarm''] or trigger.id in [''turn-on-time'']
        and states(''sensor.pixel_8_next_alarm'') in ["unknown","unavailable"]) and
        is_state(''input_boolean.boolean_wakeup_lights'', ''off'') }}'
    then:
    - action: script.script_lights_bypass
      metadata: {}
      data:
        transition: 900
        script: script.script_lights_full
    - metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.boolean_wakeup_lights
      action: input_boolean.turn_on
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: light.lights_all
      state: 'on'
    then:
    - metadata: {}
      data:
        transition: 30
      target:
        entity_id: light.lights_all
      action: light.turn_off
  mode: single
- id: '1716546587327'
  alias: automation-door
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.sensor_door_opening
    to: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - metadata: {}
    data:
      message: '{{ now().strftime(''%H:%M'') }} | FRONT DOOR IS STILL OPEN'
    action: notify.notify
  mode: single
- id: '1717852366829'
  alias: automation-air-purifier
  description: ''
  triggers:
  - entity_id:
    - sensor.i_9psl_pm2_5
    above: 5
    id: turn-on
    trigger: numeric_state
  - entity_id:
    - sensor.i_9psl_pm10
    above: 15
    id: turn-on
    trigger: numeric_state
  - entity_id:
    - sensor.i_9psl_pm2_5
    - sensor.i_9psl_pm10
    id: turn-off
    below: 4
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: numeric_state
  - trigger: time
    at: '23:00:00'
    id: turn-off
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on
    - condition: state
      entity_id: switch.plug_air_purifier_switch
      state: 'off'
    - condition: not
      conditions:
      - condition: time
        after: '23:00:00'
        before: 03:00:00
    then:
    - metadata: {}
      data: {}
      target:
        entity_id:
        - switch.plug_air_purifier_switch
      action: switch.turn_on
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: switch.plug_air_purifier_switch
      state: 'on'
    then:
    - metadata: {}
      data: {}
      target:
        entity_id:
        - switch.plug_air_purifier_switch
      action: switch.turn_off
  mode: single
- id: '1719353854773'
  alias: automation-away-from-home
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.sensor_inside_motion
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    trigger: state
  conditions:
  - condition: state
    entity_id: light.lights_all
    state: 'on'
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: light.lights_all
    action: light.turn_off
  - action: notify.notify
    metadata: {}
    data:
      message: '{{ now().strftime(''%H:%M'') }} | AWAY'
  mode: single
- id: '1719353980068'
  alias: automation-coming-home
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.sensor_door_opening
    to: 'on'
    trigger: state
  conditions:
  - condition: state
    entity_id: binary_sensor.sensor_inside_motion
    state: 'off'
  - condition: state
    entity_id: light.lights_all
    state: 'off'
  actions:
  - choose:
    - conditions:
      - condition: template
        value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
          | timestamp_custom(''%H'') | int %}

          {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
          | int %}

          {% set ratio = 2/3 %}

          {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') > (((24-hours-min/60)*ratio+hours+min/60)*60*60)
          | timestamp_custom(''%H:%M'', false) }}'
      sequence:
      - action: script.script_lights_bypass
        metadata: {}
        data:
          transition: 1
          script: script.script_lights_night
    - conditions:
      - condition: template
        value_template: '{% set hours = as_timestamp(states(''sensor.sun_next_dusk''))
          | timestamp_custom(''%H'') | int %}

          {% set min = as_timestamp(states(''sensor.sun_next_dusk'')) | timestamp_custom(''%M'')
          | int %}

          {% set ratio = 1/5 %}

          {{ as_timestamp(now()) | timestamp_custom(''%H:%M'') > (((24-hours-min/60)*ratio+hours+min/60)*60*60)
          | timestamp_custom(''%H:%M'', false) }}'
      sequence:
      - action: script.script_lights_bypass
        metadata: {}
        data:
          transition: 1
          script: script.script_lights_evening
    - conditions:
      - condition: numeric_state
        entity_id: sensor.sensor_outside_illuminance
        below: 3000
      sequence:
      - action: script.script_lights_bypass
        metadata: {}
        data:
          transition: 1
          script: script.script_lights_full
  mode: single
- id: '1722085260749'
  alias: automation-tv
  description: ''
  triggers:
  - entity_id:
    - media_player.philips_43pus8506_2
    attribute: app_id
    to: com.google.android.tvlauncher
    for:
      hours: 0
      minutes: 15
      seconds: 0
    trigger: state
  conditions: []
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: remote.philips_43pus8506
    action: remote.turn_off
  mode: single
- id: '1728665216176'
  alias: automation-morning-extra
  description: ''
  triggers:
  - entity_id:
    - sensor.pixel_8_next_alarm
    trigger: state
    id: alarm
  - trigger: state
    entity_id:
    - sensor.sun_solar_rising
    to: 'False'
    id: sun-rising
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - alarm
    then:
    - if:
      - condition: template
        value_template: '{{ trigger.to_state.state in ["unknown","unavailable"] }}'
      then:
      - metadata: {}
        data:
          datetime: '1970-01-01 00:00:00'
        target:
          entity_id:
          - input_datetime.time_wakeup_lights
        action: input_datetime.set_datetime
      else:
      - metadata: {}
        data:
          timestamp: '{{ (as_timestamp(trigger.to_state.state) | int ) - 15*60 }}'
        target:
          entity_id: input_datetime.time_wakeup_lights
        action: input_datetime.set_datetime
  - if:
    - condition: trigger
      id:
      - sun-rising
    then:
    - action: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.boolean_wakeup_lights
  mode: single
- id: '1732381763504'
  alias: automation-remote
  description: ''
  triggers:
  - device_id: 7e0df21fba2ff631d282063e7bc97f81
    domain: zha
    type: remote_button_short_press
    subtype: turn_on
    trigger: device
    id: turn-on
  - device_id: 7e0df21fba2ff631d282063e7bc97f81
    domain: zha
    type: remote_button_short_press
    subtype: turn_off
    trigger: device
    id: turn-off
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on
    - condition: state
      entity_id: light.lights_all
      state: 'off'
    then:
    - action: script.script_lights_night
      metadata: {}
      data:
        transition: 1
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: light.lights_all
      state: 'on'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.lights_all
  mode: single
- id: '1733046050619'
  alias: automation-morning-2
  description: ''
  triggers:
  - at: input_datetime.time_wakeup_lights
    id: turn-on
    trigger: time
  - entity_id:
    - sensor.sensor_working_area_illuminance
    id: turn-off
    above: 45
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: sensor.sun_solar_rising
    state: 'True'
  actions:
  - if:
    - condition: trigger
      id:
      - turn-on
    - condition: state
      entity_id: binary_sensor.sensor_inside_motion
      state: 'on'
    - condition: state
      entity_id: input_boolean.boolean_wakeup_lights
      state: 'off'
    then:
    - action: script.script_lights_bypass
      metadata: {}
      data:
        transition: 900
        script: script.script_lights_full
    - metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.boolean_wakeup_lights
      action: input_boolean.turn_on
    - action: notify.notify
      metadata: {}
      data:
        message: LIGHTS ON
  - if:
    - condition: trigger
      id:
      - turn-off
    - condition: state
      entity_id: light.lights_all
      state: 'on'
    then:
    - metadata: {}
      data:
        transition: 30
      target:
        entity_id: light.lights_all
      action: light.turn_off
  mode: single
- id: '1733095875031'
  alias: automation-morning-helper
  description: ''
  triggers:
  - entity_id:
    - sensor.pixel_8_next_alarm
    trigger: state
    id: set-time
  - trigger: time
    at: 00:00:00
    id: set-time
  - trigger: state
    entity_id:
    - sensor.sun_solar_rising
    to: 'False'
    id: sun-rising
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - set-time
    then:
    - if:
      - condition: template
        value_template: '{{ states(''sensor.pixel_8_next_alarm'') in ["unknown","unavailable"]
          }}'
      then:
      - metadata: {}
        data:
          timestamp: '{{ (as_timestamp(today_at(''09:00'')) | int ) - 15*60 }}'
        target:
          entity_id: input_datetime.time_wakeup_lights
        action: input_datetime.set_datetime
      else:
      - metadata: {}
        data:
          timestamp: '{{ (as_timestamp(trigger.to_state.state) | int ) - 15*60 }}'
        target:
          entity_id: input_datetime.time_wakeup_lights
        action: input_datetime.set_datetime
  - if:
    - condition: trigger
      id:
      - sun-rising
    then:
    - action: input_boolean.turn_off
      metadata: {}
      data: {}
      target:
        entity_id:
        - input_boolean.boolean_wakeup_lights
  mode: single
